'''
<곱하기 혹은 더하기>
각 자리가 숫자(0부터 9)로만 이루어진 문자열 S가 주어졌을 때, 왼쪽부터 오른쪽으로 하나씩 모든 숫자를 확인하며 숫자 사이에
'x' 혹은 '+' 연산자를 넣어 결과적으로 만들어질 수 있는 가장 큰 수를 구하는 프로그램을 작성하세요. 단 +보단 x를 먼저 계산하는
일반적인 방식과는 달리, 모든 연산은 왼쪽에서부터 순서대로 이루어진다고 가정합니다.
예를 들어 02984라는 문자열이 주어지면, 만들어질 수 있는 가장 큰 수는 ((((0 + 2) X 9) X 8) X 4) = 576입니다.
또한 만들어질 수 있는 가장 큰 수는 항상 20억 이하의 정수가 되도록 입력이 주어집니다.

<입력조건>
* 첫째 줄에 여러 개의 숫자로 구성된 하나의 문자열 S가 주어집니다.(1 <= S의 길이 <= 20)

<출력조건>
* 첫째 줄에 만들어질 수 있는 가장 큰 수를 출력합니다.

<입력예시1>     <출력예시1>     <입력예시2>     <출력예시2>
02984          576              567             210
'''

n = input()
# 문자열을 정수형 배열로 변환
data = [int(i) for i in n]

result = data[0] # 첫 번째 값을 result에 대입
num = 0
# 배열을 하나씩 확인한다.
for i in range(1, len(data)):
    num = data[i]
    # 두 수 중에서 하나라도 '0' or '1'인 경우, 더하기 수행
    if result <= 1 or num <= 1:
        result += num
    else:
        result *= num

print(result)

        


